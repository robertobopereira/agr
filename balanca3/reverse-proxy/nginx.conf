user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout  65;
  server_tokens off;

  upstream cliente_upstream {
    server cliente:8000;
  }
  upstream produto_upstream {
    server produto:8000;
  }

  server {
    listen 80;

    # normaliza /cliente -> /cliente/
    location = /cliente {
      return 301 /cliente/;
    }
    # normaliza /produto -> /produto/
    location = /produto {
      return 301 /produto/;
    }

    # /cliente/* -> cliente_upstream (remove o prefixo)
    location /cliente/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # nota: barra no final faz o nginx substituir /cliente/ por /
      proxy_pass http://cliente_upstream/;
    }

    # /produto/* -> produto_upstream (remove o prefixo)
    location /produto/ {
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://produto_upstream/;
    }

    # opcional: raiz com uma p√°gina simples
    location = / {
      return 200 "OK - proxy online. Use /cliente ou /produto\n";
      add_header Content-Type text/plain;
    }
  }
}
